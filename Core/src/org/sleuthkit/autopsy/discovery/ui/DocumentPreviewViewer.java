/*
 * Autopsy
 *
 * Copyright 2020 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.discovery.ui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionListener;
import org.sleuthkit.datamodel.AbstractFile;

/**
 * A JPanel to display document previews.
 */
final class DocumentPreviewViewer extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;
    private final DefaultListModel<DocumentWrapper> documentListModel = new DefaultListModel<>();

    /**
     * Creates new form DocumentViewer.
     */
    DocumentPreviewViewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        documentScrollPane = new javax.swing.JScrollPane();
        documentList = new javax.swing.JList<>();

        documentList.setModel(documentListModel);
        documentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        documentList.setCellRenderer(new DocumentPanel());
        documentScrollPane.setViewportView(documentList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(documentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(documentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Clear the list of documents being displayed.
     */
    void clearViewer() {
        synchronized (this) {
            documentListModel.removeAllElements();
            documentScrollPane.getVerticalScrollBar().setValue(0);
        }
    }

    /**
     * Add a selection listener to the list of document previews being
     * displayed.
     *
     * @param listener The ListSelectionListener to add to the selection model.
     */
    void addListSelectionListener(ListSelectionListener listener) {
        documentList.getSelectionModel().addListSelectionListener(listener);
    }

    /**
     * Get the list of AbstractFiles which are represented by the selected
     * document preview.
     *
     * @return The list of AbstractFiles which are represented by the selected
     *         document preview.
     */
    List<AbstractFile> getInstancesForSelected() {
        synchronized (this) {
            if (documentList.getSelectedIndex() == -1) {
                return new ArrayList<>();
            } else {
                return documentListModel.getElementAt(documentList.getSelectedIndex()).getResultFile().getAllInstances();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<DocumentWrapper> documentList;
    private javax.swing.JScrollPane documentScrollPane;
    // End of variables declaration//GEN-END:variables

    /**
     * Add the preview for a document to the panel.
     *
     * @param documentWrapper The object which contains the document preview
     *                        which will be displayed.
     */
    void addDocument(DocumentWrapper documentWrapper) {
        synchronized (this) {
            documentListModel.addElement(documentWrapper);
        }
    }
}
